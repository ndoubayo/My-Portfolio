{"version":3,"sources":["js/three.js"],"names":["THREE","_interopRequireWildcard","require","_bgBaner","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","container","document","querySelector","loader","TextureLoader","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGL1Renderer","setSize","appendChild","domElement","geometry","PlaneGeometry","material","MeshBasicMaterial","map","load","bg1","mesh","Mesh","add","position","z","count","attributes","clock","animate","time","getElapsedTime","i","x","getX","y","getY","anim1","Math","sin","anim2","anim3","setZ","computeVertexNormals","needsUpdate","requestAnimationFrame","render"],"mappings":"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","file":"three.bf944244.js","sourceRoot":"..","sourcesContent":["import * as THREE from 'three';\r\nimport './style.css';\r\nimport bg1 from '../assets/images/bg-baner.jpg'\r\n\r\nconst container = document.querySelector('.three_bg');\r\nconst loader = new THREE.TextureLoader();\r\n\r\nconst scene = new THREE.Scene();\r\nconst camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\r\n\r\nconst renderer = new THREE.WebGL1Renderer();\r\nrenderer.setSize(window.innerWidth, window.innerHeight);\r\ncontainer.appendChild(renderer.domElement);\r\nconst geometry = new THREE.PlaneGeometry(14, 8, 15, 9);\r\nconst material = new THREE.MeshBasicMaterial({\r\n    // color: 0xff0000,\r\n    map: loader.load(bg1)\r\n})\r\n\r\nconst mesh = new THREE.Mesh(geometry, material);\r\nscene.add(mesh);\r\ncamera.position.z = 5;\r\n\r\nconst count =geometry.attributes.position.count;\r\nconst clock = new THREE.clock()\r\n\r\nfunction animate(){\r\n    const time = clock.getElapsedTime()\r\n    for(let i = 0; i < count; i++){\r\n        const x = geometry.attributes.getX(i);\r\n        const y =geometry.attributes.position.getY(i);\r\n\r\n        const anim1 = 0.25 * Math.sin(x + time * 0.7);\r\n        const anim2 = 0.35 * Math.sin(x * 1 + time * 0.7);\r\n        const anim3 = 0.1 * Math.sin(y * 1 + time * 0.7);\r\n\r\n        geometry.attributes.position.setZ(i, anim1 + anim2 + anim3);\r\n        geometry.computeVertexNormals()\r\n        geometry.attributes.position.needsUpdate = true;\r\n    }\r\n    requestAnimationFrame(animate);\r\n    renderer.render(scene, camera)\r\n}\r\nanimate();"]}